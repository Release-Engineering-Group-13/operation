apiVersion: v1
kind: ConfigMap
metadata:
  name: environment
data:
  APP_BACKEND_URL: http://localhost/backend
  MODEL_SERVICE_URL: http://model-service.default.svc.cluster.local:8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-service-depl
  labels:
    app: model-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-service
  template:
    metadata:
      labels:
        app: model-service
    spec:
      containers:
      - name: model-service
        image: ghcr.io/release-engineering-group-13/model-service:latest
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: model-service
spec:
  selector:
    app: model-service
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-depl
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: ghcr.io/release-engineering-group-13/app/frontend:latest
        ports:
        - containerPort: 5000
        env:
        - name: API_URL
          valueFrom:
            configMapKeyRef:
              name: environment
              key: APP_BACKEND_URL
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
  - port: 5000
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-depl
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: ghcr.io/release-engineering-group-13/app/backend:latest
        ports:
        - containerPort: 8081
        env:
        - name: MODEL_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: environment
              key: MODEL_SERVICE_URL
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
  - port: 8081
    targetPort: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - http:
      paths:
      - path: /model/(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: model-service
            port:
              number: 8080
      - path: /(predict(.*))
        pathType: ImplementationSpecific
        backend:
          service:
            name: model-service
            port:
              number: 8080
      - path: /(flasgger_static/(.*))
        pathType: ImplementationSpecific
        backend:
          service:
            name: model-service
            port:
              number: 8080
      - path: /(apispec(.*))
        pathType: ImplementationSpecific
        backend:
          service:
            name: model-service
            port:
              number: 8080
      - path: /frontend/(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: frontend-service
            port:
              number: 5000
      - path: /backend/(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: backend-service
            port:
              number: 8081

