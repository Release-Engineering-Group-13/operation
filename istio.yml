apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-service-v1
  labels: { app: model-service , version: v1}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-service
  template:
    metadata:
      labels:
        app: model-service
    spec:
      containers:
        - name: model-service
          image: ghcr.io/release-engineering-group-13/model-service:latest
          ports: [ containerPort: 8080 ]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-v1
  labels: { app: frontend , version: v1}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: ghcr.io/release-engineering-group-13/app/frontend:latest
          ports: [ containerPort: 5000 ]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-v1
  labels: { app: backend , version: v1}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata: 
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/release-engineering-group-13/app/backend:latest
          ports: [ containerPort: 8081 ]
---
apiVersion: v1
kind: Service
metadata: { name: model-service }
spec:
  selector:
    app: model-service
  ports:
    - { name: http , port: 8080, targetPort: 8080 }
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - { name: http , port: 5000, targetPort: 5000 }
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend
  ports:
    - { name: http , port: 8081, targetPort: 8081 }
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: istio-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - port: { number: 80, name: http , protocol: HTTP }
      hosts: [ "*" ]
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: istio-entry-service
spec:
  gateways: [ istio-gateway ]
  hosts: [ "*" ]
  http:
    - match:
      - uri:
          prefix: /
      route:
        - destination:
            host: backend
