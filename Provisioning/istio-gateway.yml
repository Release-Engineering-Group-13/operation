apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: istio-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - port: { number: 80, name: http , protocol: HTTP }
      hosts: [ "*" ]
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: istio-entry-service
spec:
  gateways: [ istio-gateway ]
  hosts: [ "*" ]
  http:
    - match:
      - uri:
          prefix: /
      route:
        - destination: { host: backend, subset: v1 }
          weight: 90
        - destination: { host: backend, subset: v2 }
          weight: 10
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: model-service-dr
spec:
  host: model-service
  subsets:
    - name: v1
      labels: { version: v1 }
    - name: v2
      labels: { version: v2 }
--- 
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: model-service-vs
spec:
  hosts: [ model-service ]
  http:
    - match:
        - sourceLabels: { version: v2 }
      route:
        - destination: { host: model-service, subset: v2 }
    - route: 
        - destination: { host: model-service, subset: v1 }
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: frontend-dr
spec:
  host: frontend
  subsets:
    - name: v1
      labels: { version: v1 }
    - name: v2
      labels: { version: v2 }
--- 
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: frontend-vs
spec:
  hosts: [ frontend ]
  http:
    - match:
        - sourceLabels: { version: v2 }
      route:
        - destination: { host: frontend, subset: v2 }
    - route: 
        - destination: { host: frontend, subset: v1 }
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: backend-dr
spec:
  host: backend
  subsets:
    - name: v1
      labels: { version: v1 }
    - name: v2
      labels: { version: v2 }